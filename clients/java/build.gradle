plugins {
    id 'java'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.9.4'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.orisunlabs'
version = '0.0.1'

repositories {
    mavenCentral()
}

def grpcVersion = '1.65.1'
def protobufVersion = '4.28.2'

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"
}

shadowJar {
    archiveBaseName.set('orisun-client')
    archiveClassifier.set('')
//    archiveVersion.set('0.0.1') // Set your version
    manifest {
        attributes 'Main-Class': 'com.orisunlabs.orisun.client.OrisunClient' // Replace with your main class if needed
    }
    mergeServiceFiles()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

// Configure the protobuf source directory
sourceSets {
    main {
        proto {
            srcDir '../../eventstore'
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = 'com.orisunlabs'
            artifactId = 'orisun-java-client'
            version = version
            
            pom {
                name = 'Orisun Java Client'
                description = 'Java client for the Orisun Event Store'
                url = 'https://github.com/orexza/orisun'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'yourusername'
                        name = 'Your Name'
                        email = 'your.email@example.com'
                    }
                }
            }
        }
    }
    
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/yourusername/orisun")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        
        // If you want to publish to Maven Central
        // maven {
        //     name = "OSSRH"
        //     url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        //     credentials {
        //         username = System.getenv("OSSRH_USERNAME")
        //         password = System.getenv("OSSRH_PASSWORD")
        //     }
        // }
    }
}

test {
    useJUnitPlatform()
}
