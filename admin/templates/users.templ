package templates

type User struct {
	Name     string
	Id       string
	Username string
	Roles    []string
}

const UserPageId = "users-page"

templ UsersPage(users []User, currentPath string, currentUser string) {
	@Admin(currentPath, "Users") {
		<div data-on-load="@get('/users')"></div>
		@PageContainer(users, currentPath, currentUser)
	}
}

templ PageContainer(users []User, currentPath string, currentUser string) {
	<div id={ UserPageId } class="p-6">
		<div class="mb-6 flex justify-between items-center">
			<h1 class="text-2xl font-bold text-gray-900">User Management</h1>
			<sl-button pill variant="primary" size="medium" data-on-click="@get('/users/add')">
				<sl-icon slot="prefix" name="person-plus"></sl-icon>
				Add User
			</sl-button>
		</div>
		<sl-alert id="message" variant="primary" closable>
			<sl-icon slot="icon" name="info-circle"></sl-icon>
			<span class="message-content"></span>
		</sl-alert>
		<sl-card class="mb-6">
			<div class="overflow-x-auto">
				@UserList(users, currentUser)
			</div>
		</sl-card>
		<sl-dialog id="add-user-dialog"></sl-dialog>
	</div>
}

const UsersTableId = "users-table-container"

templ UserList(users []User, currentUser string) {
	<div id={ UsersTableId } class="overflow-hidden shadow-lg rounded-lg border border-gray-200">
		<table id="users-table" class="min-w-full divide-y divide-gray-200">
			<thead>
				<tr class="bg-gradient-to-r from-blue-50 to-indigo-50">
					<th class="px-6 py-4 text-left text-xs font-semibold text-indigo-600 uppercase tracking-wider">Name</th>
					<th class="px-6 py-4 text-left text-xs font-semibold text-indigo-600 uppercase tracking-wider">Username</th>
					<th class="px-6 py-4 text-left text-xs font-semibold text-indigo-600 uppercase tracking-wider">Roles</th>
					<th class="px-6 py-4 text-right text-xs font-semibold text-indigo-600 uppercase tracking-wider">Actions</th>
				</tr>
			</thead>
			<tbody id="users-table-body" class="bg-white divide-y divide-gray-100">
				for i, user := range users {
					@UserRow(&user, currentUser, i)
				}
			</tbody>
		</table>
	</div>
}

templ UserRow(user *User, currentUser string, i int) {
	if i % 2 == 0 {
		<tr class="bg-white hover:bg-blue-50 transition-colors duration-150 ease-in-out">
			@UserRowContent(user, currentUser)
		</tr>
	} else {
		<tr class="bg-gray-50 hover:bg-blue-50 transition-colors duration-150 ease-in-out">
			@UserRowContent(user, currentUser)
		</tr>
	}
}

templ UserRowContent(user *User, currentUser string) {
	<td class="px-6 py-1 whitespace-nowrap">
		<div class="flex items-center gap-1">
			<sl-avatar label={ user.Name } initials class="shadow-sm"></sl-avatar>
			<span class="font-medium text-gray-900">{ user.Name }</span>
		</div>
	</td>
	<td class="px-6 py-1 whitespace-nowrap">
		<div class="text-sm text-gray-700">{ user.Username }</div>
	</td>
	<td class="px-6 py-1 whitespace-nowrap">
		<div class="flex flex-wrap gap-2">
			for _, role := range user.Roles {
				<sl-badge variant="primary" pill>{ role }</sl-badge>
			}
		</div>
	</td>
	<td class="px-6 py-1 whitespace-nowrap text-right">
		<sl-button variant="danger" size="small" pill disabled?={ user.Id==currentUser } class="shadow-sm hover:shadow transition-all duration-150" data-on-click={ "confirm('Are you sure you want to delete " + user.Name + "?') && @delete(' /users/" + user.Id + "/delete')" }>
			<sl-icon slot="prefix" name="trash"></sl-icon>
			Delete
		</sl-button>
	</td>
}
